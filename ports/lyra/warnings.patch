diff -Naur a/include/lyra/parser.hpp b/include/lyra/parser.hpp
--- a/include/lyra/parser.hpp	2020-08-30 04:51:30.000000000 +0200
+++ b/include/lyra/parser.hpp	2021-04-16 12:43:42.887242100 +0200
@@ -76,7 +76,7 @@
 {
 	public:
 	parse_state(parser_result_type type,
-		token_iterator const & remaining_tokens, size_t parsed_tokens = 0)
+		token_iterator const & remaining_tokens, size_t /*parsed_tokens*/ = 0)
 		: result_type(type)
 		, tokens(remaining_tokens)
 	{}
@@ -162,7 +162,7 @@
 
 	virtual ~parser() = default;
 
-	virtual parse_result parse(std::string const & exe_name,
+	virtual parse_result parse(std::string const & /*exe_name*/,
 		detail::token_iterator const & tokens,
 		parser_customization const & customize) const
 	{
@@ -177,14 +177,14 @@
 	virtual bool is_group() const { return false; }
 	virtual result validate() const { return result::ok(); }
 	virtual std::unique_ptr<parser> clone() const { return nullptr; }
-	virtual bool is_named(const std::string & n) const { return false; }
+	virtual bool is_named(const std::string & /*n*/) const { return false; }
 	virtual const parser * get_named(const std::string & n) const
 	{
 		if (is_named(n)) return this;
 		return nullptr;
 	}
 	virtual size_t get_value_count() const { return 0; }
-	virtual std::string get_value(size_t i) const { return ""; }
+	virtual std::string get_value(size_t /*i*/) const { return ""; }
 
 	protected:
 	void print_help_text(std::ostream & os) const
